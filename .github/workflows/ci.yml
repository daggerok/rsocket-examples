name: CI
on: [push]

jobs:

  build-rsocket-protobuf-on-unix:
    strategy:
      matrix:
        java: [11]
        nodejs-version: [12]
        python-version: [3.8]
        gradle-version: [6.2]
        maven-version: [3.6.3]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Cache npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ matrix.nodejs-version }}-${{ matrix.os }}-npm-cache
          restore-keys: |
            ${{ matrix.nodejs-version }}-${{ matrix.os }}-npm-cache-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie

      - name: Git clone
        uses: actions/checkout@v1
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Set up maven
        uses: stCarolas/setup-maven@v3
        with:
          maven-version: ${{ matrix.maven-version }}
      - name: Maven build
        run: cd $GITHUB_WORKSPACE/rsocket-protobuf && mvn
      - name: Run
        run: |
          java -jar $GITHUB_WORKSPACE/rsocket-protobuf/server/target/*-all.jar
          java -jar $GITHUB_WORKSPACE/rsocket-protobuf/client/target/*-all.jar
      - name: Cache maven
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          #key: ${{ runner.os }}-maven-${{ hashFiles('**/.m2/repository/**') }}
          key: ${{ matrix.maven-version }}-${{ matrix.os }}-maven-cache
          restore-keys: |
            ${{ matrix.maven-version }}-${{ matrix.os }}-maven-cache-

      - name: Build gradle app
        uses: eskatos/gradle-command-action@v1
        env:
          CI: true
        with:
          #build-root-directory: rsocket-protobuf
          gradle-version: ${{ matrix.gradle-version }}
          arguments: clean build -S -p rsocket-protobuf
      - name: Test gradle app
        shell: bash
        run: |
          java -Dfile.encoding="UTF-8" -jar $GITHUB_WORKSPACE/rsocket-protobuf/server/build/libs/*-all.jar
          java -Dfile.encoding="UTF-8" -jar $GITHUB_WORKSPACE/rsocket-protobuf/client/build/libs/*-all.jar
      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          #key: java-${{ matrix.java }}-${{ runner.os }}-${{ matrix.os }}-gradle-${{ hashFiles('**/.gradle/**') }}
          key: ${{ matrix.gradle-version }}-${{ matrix.os }}-gradle-cache
          restore-keys: |
            ${{ matrix.gradle-version }}-${{ matrix.os }}-gradle-cache-

  build-rsocket-protobuf-on-windows:
    strategy:
      matrix:
        java: [11]
        nodejs-version: [12]
        python-version: [3.8]
        gradle-version: [6.2]
        maven-version: [3.6.3]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    steps:
      - name: Set up NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Install required npm packages globally
        run: npm install -g wait-port
      - name: Cache npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          #key: ${{ matrix.java }}-${{ matrix.os }}-cache
          key: java-${{ matrix.java }}-${{ runner.os }}-${{ matrix.os }}-npm-
          restore-keys: |
            java-${{ matrix.java }}-${{ runner.os }}-${{ matrix.os }}-npm-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie

      - name: Git clone
        uses: actions/checkout@v1
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Set up maven
        uses: stCarolas/setup-maven@v3
        with:
          maven-version: ${{ matrix.maven-version }}
      - name: Build maven app
        shell: cmd
        run: cd %GITHUB_WORKSPACE%\rsocket-protobuf & mvn -Dfile.encoding="UTF-8"
      - name: Test maven app
        shell: cmd
        run: |
          @chcp 65001>nul
          echo "Do not generate with openssl on Windows! It's doesn't work!"
          java -Dfile.encoding="UTF-8" -jar %GITHUB_WORKSPACE%\rsocket-protobuf\server\target\server-1.0.0-SNAPSHOT-all.jar
          java -Dfile.encoding="UTF-8" -jar %GITHUB_WORKSPACE%\rsocket-protobuf\client\target\client-1.0.0-SNAPSHOT-all.jar
      - name: Cache maven
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # https://github.com/eskatos/gradle-command-action#setup-and-use-a-declared-gradle-version
      - name: Build gradle app
        uses: eskatos/gradle-command-action@v1
        env:
          CI: true
        with:
          build-root-directory: rsocket-protobuf
          gradle-version: ${{ matrix.gradle-version }}
          #arguments: -S -p rsocket-protobuf
          arguments: -S
      - name: Test gradle app
        shell: cmd
        run: |
          @chcp 65001>nul
          java -Dfile.encoding="UTF-8" -jar %GITHUB_WORKSPACE%\rsocket-protobuf\server\build\libs\server-1.0.0-SNAPSHOT-all.jar
          java -Dfile.encoding="UTF-8" -jar %GITHUB_WORKSPACE%\rsocket-protobuf\client\build\libs\client-1.0.0-SNAPSHOT-all.jar
      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: java-${{ matrix.java }}-${{ runner.os }}-${{ matrix.os }}-gradle-${{ hashFiles('**/.gradle/**') }}
          restore-keys: |
            java-${{ matrix.java }}-${{ runner.os }}-${{ matrix.os }}-gradle-
